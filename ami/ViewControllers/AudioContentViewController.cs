// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using ami.Helper;
using ami.Model;
using Foundation;
using SafariServices;
using UIKit;

namespace ami.ViewControllers
{
    public partial class AudioContentViewController : UITableViewController ,IErrorHandleViewController
    {
        private readonly Task<ContentResponseModel<SongModel>> _songTask = SongModel.GetSongs();

        private readonly Task<ContentResponseModel<StoryModel>>  _storyTask = StoryModel.GetStories();
        private Task _aggTask;

        public AudioContentViewController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            Task[] taskArr = {_storyTask, _songTask};
            _aggTask = Task.WhenAll(taskArr);
            _aggTask.ContinueWith(
                arg => InvokeOnMainThread(() => TableView.ReloadData())
                , TaskContinuationOptions.OnlyOnRanToCompletion);
            _aggTask.ContinueWith(
                arg => { Console.WriteLine(arg.Exception); }
                , TaskContinuationOptions.NotOnRanToCompletion);
            RefitErrorProcessing.Process(_aggTask,this);
            base.ViewDidLoad();
        }

        public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
        {
            var cell = tableView.DequeueReusableCell("AudioCell") ??
                       new UITableViewCell(UITableViewCellStyle.Default, "AudioCell");

            if (indexPath.Section == 0)
            {
                cell.TextLabel.Text = NSBundle.MainBundle.GetLocalizedString("Language Learning");
                return cell;
            }
            if (_aggTask == null || !_aggTask.IsCompleted) return cell;

            var stories = _storyTask.Result.Audios;
            var songs = _songTask.Result.Audios;

            switch (indexPath.Section)
            {
                case 1: // story
                    cell.TextLabel.Text = stories[indexPath.Row].ContentName;
                    break;
                case 2: //song
                    cell.TextLabel.Text = songs[indexPath.Row].ContentName;
                    break;
            }
            //Song
            return cell;
        }

        public override nint NumberOfSections(UITableView tableView)
        {
            return 3;
        }

        public override nint RowsInSection(UITableView tableView, nint section)
        {
            if (section == 0) return 1;
            if (_aggTask == null || !_aggTask.IsCompleted) return 0;

            var stories = _storyTask.Result.Audios;
            var songs = _songTask.Result.Audios;

            switch (section)
            {
                case 1:
                    return stories.Count;
                case 2:
                    return songs.Count;
            }
            return 0;
        }

        public override string TitleForHeader(UITableView tableView, nint section)
        {
            switch (section)
            {
                case 0:
                    return NSBundle.MainBundle.GetLocalizedString("Language Learning");
                case 1:
                    return NSBundle.MainBundle.GetLocalizedString("Stories");
                case 2:
                    return NSBundle.MainBundle.GetLocalizedString("Songs");
                default:
                    return "";
            }
        }

        public override void RowSelected(UITableView tableView, NSIndexPath indexPath)
        {
            if (indexPath.Section ==0)
            {
                var languageVC = AppDelegate.Storyboard.InstantiateViewController(nameof(LanguageLearningViewController));
                NavigationController.PushViewController(languageVC, true);
                return;
            }
            var stories = _storyTask.Result.Audios;
            var songs = _songTask.Result.Audios;
            var rootStory = _storyTask.Result.RootUrl;
            var rootSong = _songTask.Result.RootUrl;

            var uri = new Uri("https://www.ami4kidz.com");
            switch (indexPath.Section)
            {
                case 1:
                    if(!stories[indexPath.Row].Relative)
                    {
                        uri = stories[indexPath.Row].FileName;
                    }
                    else
                    {
                        uri = new Uri(rootStory + "/"+ stories[indexPath.Row].FileName);
                    }
                    break;
                case 2:
                    if (!songs[indexPath.Row].Relative)
                    {
                        uri = songs[indexPath.Row].FileName;
                    }
                    else
                    {
                        uri = new Uri(rootSong + "/" + songs[indexPath.Row].FileName);
                    }
                    break;
            }
            var nsurl = new NSUrl(uri.GetComponents(UriComponents.HttpRequestUrl, UriFormat.UriEscaped));
            var sfViewController = new SFSafariViewController(nsurl);
            PresentViewController(sfViewController, true, null);
        }

        public void PresentProblemAlert(string msg)
        {
            var okAlertController = UIAlertController.Create("Error", msg, UIAlertControllerStyle.Alert);
            //Add Action
            okAlertController.AddAction(UIAlertAction.Create("Ok", UIAlertActionStyle.Default, null));

            // Present Alert
            PresentViewController(okAlertController, true, null);
        }
    }
}