// This file has been autogenerated from a class added in the UI designer.

using System;
using System.IO;
using Foundation;
using Realms;
using UIKit;
using UserNotifications;

namespace ami.ViewControllers
{
    public partial class NewReminderTableViewController : UIViewController
    {
        public NewReminderTableViewController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
        }

        partial void DoneButtonPressed(NSObject sender)
        {
            var child = ChildViewControllers[0] as NewReminderChildViewController;
            var realm = AppDelegate.GetRealm();


            UNNotificationSound audio;
            var audioFolderName = "/Audios_" + NSBundle.MainBundle.PreferredLocalizations[0] + "/";
            if (File.Exists(NSBundle.MainBundle.BundlePath +audioFolderName + child.Reminder.Command.FileName))
            {
                audio = UNNotificationSound.GetSound(audioFolderName+ child.Reminder.Command.FileName);
            }
            else
            {
                audio = UNNotificationSound.GetSound(child.Reminder.Command.FileName);
            }
            var content = new UNMutableNotificationContent
            {
                Title = "Ami Notification",
                Subtitle = child.Reminder.Command.Name,
                Body = "This is an AMI Reminder.",
                Sound = audio
            };
            var seconds = (child.Reminder.AlarmDate.UtcDateTime - DateTime.UtcNow).TotalSeconds;
            var trigger = UNTimeIntervalNotificationTrigger.CreateTrigger(seconds, false);
            var request = UNNotificationRequest.FromIdentifier(child.Reminder.RequestId, content, trigger);

            UNUserNotificationCenter.Current.AddNotificationRequest(request, err =>
            {
                if (err != null)
                    Console.WriteLine("Error: {0}-", err);
                else
                    Console.WriteLine("Notification Scheduled: {0}", request);
            });
            realm.Write(() => { realm.Add(child.Reminder); });
            PerformSegue("UnwindReminderSegue", this);
        }
    }
}